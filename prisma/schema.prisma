// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(cuid())
  name      String
  email     String      @unique
  password  String
  role      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())
  Order     Order[]     @relation(name: "creator")
  OrderItem OrderItem[]
  Handled   Order[]     @relation(name: "handler")
}

model Branch {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Order     Order[]
}

model OrderItem {
  id          String   @id @default(cuid())
  name        String
  item        Item     @relation(fields: [itemId], references: [id])
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  Order       Order    @relation(fields: [OrderId], references: [id])
  OrderId     String
  itemId      String
  requestedBy User     @relation(fields: [userId], references: [id])
  userId      String
}

model Order {
  id        String      @id @default(cuid())
  name      String
  items     OrderItem[]
  createdBy User        @relation(name: "creator", fields: [creatorId], references: [id])
  creatorId String
  handler   User?       @relation(name: "handler", fields: [handlerId], references: [id])
  handlerId String?
  status    Boolean     @default(false)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())
  sentTo    Branch?     @relation(fields: [branchId], references: [id])
  branchId  String?
}

model Item {
  id        String      @id @default(cuid())
  name      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())
  OrderItem OrderItem[]
}
